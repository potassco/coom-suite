// Olympic bus example
// Provided by Andreas Falkner
// Adapted from Yang & Dong, Journal of Intelligent Manufacturing (2013)

product {
    0..80   Seat        seat
    0..4    DVDPlayer   dvdPlayer
            BusType     type

    num /W  0-3400      totalPowerConsumption
    num     0-80        seatCount
}

structure Seat {
            Lamp     lamp
    0..1    Display  display
            SeatType type
}

enumeration DVDPlayer {
    attribute num /W powerConsumption

    Player = ( 50)
}

enumeration BusType { Standard Tourist }
enumeration SeatType { Standard DeLuxe }

enumeration Lamp {
    attribute num /W powerConsumption

    ReadingLamp = ( 25 )
}

enumeration Display {
    attribute num /W powerConsumption

    LCDDisplay = ( 15 )
}

behavior Seat {
    explanation "DeLuxe seats have an LCD display"
    condition type = DeLuxe
    require count(display) = 1
}

behavior {
    explanation "In tourist busses every seat is of type DeLuxe."
    condition type = Tourist
    require seat.type = DeLuxe

    explanation "If there is at least one display, then at least on DVD player is required."
    condition count(seat.display) > 0
    require count(dvdPlayer) > 0

    explanation "If there are more than twenty displays, then at least two DVD players are required."
    condition count(seat.display) > 20
    require count(dvdPlayer) > 1

    explanation "The total power consumption is the sum of all devices"
    imply totalPowerConsumption = sum(dvdPlayer.powerConsumption) + sum(seat.lamp.powerConsumption) + sum(seat.display.powerConsumption)

    explanation "The total power consumption must not exceed 2000 W."
    require totalPowerConsumption <= 2000

    imply seatCount = count(seat)

    // maximize seatCount
}
