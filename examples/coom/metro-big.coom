// Metro wagon example
// Falkner et al.: Solver Requirements for Interactive Configuration (2020)

product {
    num /mm 100000-200000     length
    num 50-2000              num_passengers
    num 0-2000               standing_room

    0..1    HandRail    handrail
    0..1000   Seat        seat
}

enumeration HandRail { Standard Premium}

structure Seat {
    SeatType    type
    Color       color
}

enumeration SeatType { Standard Premium Special}
enumeration Color { Blue Red White }

behavior {
    explanation "If there is standing room, a handrail is required."
    condition standing_room > 0
    require count(handrail) = 1

    explanation "Max. 4 seats per meter length and one seat occupies the space of three standing passengers."
    require 1000 * (count(seat) * 3 + standing_room) <= 12 * length

    explanation "Standard type cannot be mixed with premium."
    combinations    ( seat.type     handrail )
    allow           ( Standard      Standard )
    allow           ( Premium       Premium  )
    allow           ( Special       -*-      )

    explanation "The number of passengers is equal to the number of seats plus standing room."
    require num_passengers = count(seat) + standing_room

    // explanation "The color of all seats must be the same, except for special seats." // How to implement? Default (see below)? Or set a "global" type that restricts all seat types?
    // condition seat.type != Special
    // require seat.color = seat.color
}

behavior Seat {
    explanation "Seats of type Special must be red."
    condition type = Special
    require color = Red
}

// // Defaults (not implemented currently)
// behavior {
//     default seat.type = Standard

//     default handrail = Standard

//     default seat.color = Blue

//     explanation "All seats have to have the same color (except special seats)"
//     default seat.color = seat.color

//     explanation "Users prefer to maximize load factor (number of passengers per length)" // How to implement?
// }
