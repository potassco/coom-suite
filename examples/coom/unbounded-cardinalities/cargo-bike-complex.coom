product {
            num /l  0-200   totalVolume
            num /l  0-200   requestedVolume
    2..*    Bag             bags
            Color           color
}

structure Bag {
         Color    color
         Size     size
    0..* Pocket   pockets
    1..3 Opening  openings
}

enumeration Pocket { S M L XL }

enumeration Opening { Zipper Velcro }

enumeration Color { Green Blue Red }

enumeration Size {
    attribute num weight
    attribute num volume

    small   = ( 10 12 )
    medium  = ( 15 16 )
    large   = ( 25 20 )
}

behavior {
    explanation "The total volume is equal to the sum of the volumes of all bags."
    require totalVolume = sum(bags.size.volume)

    explanation "The total volume must be greater than or equal to the requested volume."
    require totalVolume >= requestedVolume
}

behavior {
    require color = Blue
}

// behavior {
//     require color = Green
// }

behavior {
    condition color = Blue
    require 3 <= count(bags)
}

behavior {
    require bags.color = Green
}

behavior Bag {
    require 11 <= count(pockets)
}

// behavior Bag {
//     condition size = small
//     require 2 <= count(pockets)

//     condition size = medium
//     require 3 <= count(pockets)

//     condition size = large
//     require 5 <= count(pockets)
// }

behavior Bag {
    explanation "The size of the pockets of a bag have to match the size of the bag."
    combinations (size     pockets)
    allow        (small    S      )
    allow        (medium   M      )
    allow        (large    (L,XL) )
}

// BUG: not working correctly due to preprocessing (inc_set detection)
// behavior Bag {
//     require 2 = count(openings)
// }
