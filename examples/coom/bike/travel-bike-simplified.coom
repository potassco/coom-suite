// Simplified Travel Bike example
// Provided by denkbares GmbH
// see Baumeister et al.: Towards Industrial-scale Product Configuration (2025).

product {
    num .#/l	  0-200   totalVolume
    num .#/l	  0-200   requestedVolume
    Carrier			      carrier
    Frame			      frame
}

structure Carrier {
    0..3 Bag	        bag
}

structure Frame {
    0..2 Bag  	        bag
}

enumeration Bag {
    attribute num/l volume

    B20  = ( 20,  250)
    B50  = ( 50,  600)
    B100 = (100, 1200)
}

behavior {
    explanation "The bike can have a maximum of 4 bags."
    require count(carrier.bag) + count(frame.bag) <= 4

    explanation "The total volume of the bags should be equal to the sum of the volumes of all bags on the carrier and the frame."
    require totalVolume = sum(carrier.bag.volume) + sum(frame.bag.volume)

    explanation "The total volume must be greater than or equal to the requested volume."
    require totalVolume >= requestedVolume
}
