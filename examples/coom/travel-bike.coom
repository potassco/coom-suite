product {
    num .#/g	1-10000 totalWeight
	num .#/kg	10-10    maxWeight
	num .#/l	0-200   totalVolume
	num .#/l	200-200   requestedVolume
	Wheel			    frontWheel
	Wheel			    rearWheel
	Carrier			    carrier
	Frame			    frame
	Color				color
}

structure Carrier {
	0..3 Bag	        bag
}

structure Frame {
	0..2 Bag  	        bag
}

structure Bag {
	Capacity	        capacity
	Material	        material
}

enumeration Capacity {
	attribute num/l volume
	attribute num/gr weight

	B10  = ( 10,  100)
	B20  = ( 20,  250)
	B50  = ( 50,  600)
	B100 = (100, 1200)
}

enumeration Material {
	Cotton
	Leather
	Polyester
}

enumeration Wheel {
	attribute	num/inch	size
	attribute	num/gr		weight

	W20	= (	 20	    650	)
	W22	= (	 22	    700	)
	W24	= (	 24	    800	)
	W26	= (	 26	    900	)
	W28	= (	 28	   1000	)
}

enumeration Color {
	Red
	Green
	Yellow
	Blue
}

behavior {
    require count(carrier.bag) + count(frame.bag) <= 4

	imply totalWeight = frontWheel.weight + rearWheel.weight
						+ sum(carrier.bag.capacity.weight)
						+ sum(frame.bag.capacity.weight)

	require totalWeight <= maxWeight * 1000

	imply totalVolume = sum(carrier.bag.capacity.volume) + sum(frame.bag.capacity.volume)

	require totalVolume >= requestedVolume

	condition color = Red
	require frontWheel.size = 20
}

behavior Bag {
	condition material = Leather
	require capacity = B10
}
